<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export3.dtd">
<en-export export-date="20170312T020530Z" application="Evernote" version="Evernote Mac 6.9 (453991)">
<note><title>CALayer</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note>
<div><span style="font-family: 'Courier New';"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);">   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//UIImage是屏幕分辨率的解决方案，所以指点点来度量大小</span></span></div>
<div><span style="font-family: 'Courier New';"><span style="color: rgb(255, 255, 255);">   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//一些底层的图片标识如CGImage就会使用像素，所以在Retina设备和普通设备上，表现大小不一样</span></span></div>
<div><span style="font-family: 'Courier New';"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);">   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//layer是当前view的宿主图层，我们可以设置layer的content属性，来设置它的显示图片内容</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
    </span><span style="color: rgb(3, 3, 3);"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">layer</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">contents</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">= (</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">__bridge</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">id</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">)[</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">UIImage</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">imageNamed</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">:</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">@&quot;&quot;</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">].</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">CGImage</span></span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><span style="color: rgb(3, 3, 3);">;</span><br/>
   <br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//设置内容的显示模式，如UIView的contentModel：Center/Fill等</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
<span style="color: rgb(1, 0, 0);">   </span></span> <span style="color: rgb(1, 0, 0);"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">layer</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">contentsGravity</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">=</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">kCAGravityCenter</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">;<br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">layer</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">contentsGravity</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">=</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">kCAGravityResizeAspectFill</span></span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><span style="color: rgb(1, 0, 0);">;</span><br/>
   <br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//设置当前内容应该已什么样的分辨率显示，如Retian应该是2.0</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//使用UILayer显示图片的时候，需要根据原始图片的scale来设置</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
<span style="color: rgb(1, 2, 1);">   </span></span> <span style="color: rgb(1, 2, 1);"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">layer</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">contentsScale</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">=</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">1.0</span></span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><span style="color: rgb(1, 2, 1);">;</span><br/>
   <br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//超出屏幕之后，是否可以剪切</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
<span style="color: rgb(3, 2, 2);">   </span></span> <span style="color: rgb(3, 2, 2);"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">layer</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">masksToBounds</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">=</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">YES</span></span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><span style="color: rgb(3, 2, 2);">;</span><br/>
   <br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//在图层的Rect和UIView中<span style="color: rgb(73, 191, 84);">的Rect不</span>一样，它的值的是相对于宿主图层的相对坐标，值的范围是（0.0~1.0）</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//这种坐标的学名叫“单位坐标”，在OpenGL、CoreAnimation中使用比较多</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
<span style="color: rgb(3, 2, 2);">   </span></span> <span style="color: rgb(3, 2, 2);"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">layer</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">contentsRect</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">=</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">CGRectMake</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">(</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">0.5</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">,</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">0.5</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">,</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">1.0</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">,</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">1.0</span></span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><span style="color: rgb(3, 2, 2);">);</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="color: rgb(255, 255, 255);">   </span></span></div>
<div><span style="font-family: 'Courier New';"><span style="color: rgb(255, 255, 255);">   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//这个不是设置图片的位置的属性，因为它的值是CGRectf</span></span></div>
<div><span style="font-family: 'Courier New';"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);">   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//它定义了一个固定的边框和一个在图层上可拉伸的区域</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//说白点就是设置一个Layer如果需要拉伸的时候，可以拉伸的位置。如UIView的stretched，设置拉伸的临界区域</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
<span style="color: rgb(3, 1, 1);">   </span></span> <span style="color: rgb(3, 1, 1);"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">layer</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">contentsCenter</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">=</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">CGRectMake</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">(</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">0</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">,</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">0</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">,</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">1</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">,</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">1</span></span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><span style="color: rgb(3, 1, 1);">);</span><br/>
   <br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//CALayerDelegate是一个非正式的代理，其实就是说没有CALayerDelegate @protocol可以让你在类里面引用</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//你只需要想调用的方法，CALayer会帮你做剩下的</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//CALayerDelegate这个代理没有要求我们遵守什么特定的协议，那么可以认为这个协议的方法是NSObject里面的。</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//以后如果要设置某个类的代理，但是这个代理没有要求我们遵守什么特定的协议，那么可认为这个协议方法是NSObject里边的</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(76, 191, 87);">//不能把某个UIView设置为CALayer的delegate,因为UIView对象已经是它内部根层的delegate,再次设置为其他层的delegate就会出问题</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; color: rgb(255, 255, 255);"><br/>
<span style="color: rgb(255, 86, 75);">   </span></span> <span style="color: rgb(255, 86, 75);"><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">//UIView :  drawRect()方法</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">//CALayer : displayLayer:</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;"><br/>
   </span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">//                drawLayer: inContext:</span></span></span></div>
<div><span style="color: rgb(2, 3, 2);"><span style="font-family: 'Courier New';">    <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">layer</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">.</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">delegate</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">=</span> <span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">self</span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px;">;</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="color: rgb(2, 3, 2);"><br/></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="color: rgb(2, 3, 2);"><span style="color: rgb(67, 191, 85);">    //CALayer和UIView:Center/position为区分UIView和CALayer</span></span></span></div>
<div><span style="font-family: 'Courier New';">    UIView：frame，bounds和Center</span></div>
<div><span style="font-family: 'Courier New';">    CALayer：frame，bounds和<span style="color: rgb(51, 51, 51); font-size: 13.6000003814697px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; background-color: rgb(247, 247, 247);">position</span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">    对于视图和图层来说，frame并不是一个清晰的属性，是根据bounds/postion和transform计算出来的，反之这三个属性的变化也会影响到frame的值</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div>
<div><span style="color: rgb(71, 191, 88);"><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);">    //锚点</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     锚点默认值为（0.5，0.5），如果修改了锚点了值，会修改了图层/UIView的frame。</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">    <span style="color: rgb(65, 191, 86);">//shadow</span></span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     shadow.shadowColor: 阴影的颜色</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     shadow.shadowOffset: 阴影的偏离大小</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     shadow.shadowOpacity: 阴影的透明度</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     shadow.shadowRadius: 阴影的模糊度（因为radius是半径的意思，一直以为是阴影的角度了！！）</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     shadow.shadowPath: 可以单独的设置阴影的形状（CGPathRef/UIBezierPath）</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div>
<div><span style="color: rgb(64, 191, 84);"><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);">     //图层蒙板</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     CALayer.mask，其中mask其实也是CALayer类型的。可以自己自定义图层然后设置给某个图层</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     //图层的旋转变化</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     图层的旋转可以：</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">          CALayer.affineTransform(CGAffineTransform二维的变化)和UIView的通用</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">          CALayer.transform(CATransform3D三维的变化)</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     </span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     //图层的多个效果合并</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     <span style="color: rgb(197, 58, 34);">CGAffineTransformConcat(CGAffineTransform t1,CGAffineTransform t2)(这个很重要，以前不知道这个方法)</span></span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(197, 58, 34);"><br/></span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(197, 58, 34);">     //UIBezierPath这个类是继承自NSObject类的</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(197, 58, 34);">     这个类是Foundation框架中的类，可以方便的进行绘图</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(197, 58, 34);">     UIBezierPath有一个CGPath属性，返回值是CGPathRef，它是一个指向CGPath结构体的指针</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(197, 58, 34);">     CGPathRef(CGPath)可以作为绘图的一个路径来使用</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(197, 58, 34);"><br/></span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(197, 58, 34);">     //ios中的专用图层(这些专用图层，自己一般不会用到)</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(197, 58, 34);">         CAShareLayer/CATextLayer/CATransformLayer/CAGradientLayer/CAReplicatorLayer/CAScrollLayer/CATiledLayer/CAEmitterLayer/CAEagLLayer/AVPlayerLayer<br/></span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div>
<div><span style="color: rgb(57, 191, 84);"><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);">     //对于CALayer/UIView之间位置是否变化的疑惑？</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     如果UIView所对应的图层的anchorPoint发生了变化，那么UIView/CALayer的frame发生了变化了没有？</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     为什么以前听说CALayer的动画都是一个假象？</span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div>
<div><span style="font-family: 'Courier New';"><span style="background-color: rgb(247, 247, 247);"><span style="color: rgb(51, 51, 51);">     <br/></span></span></span></div>
</en-note>
]]></content><created>20150710T073715Z</created><updated>20150713T065011Z</updated><note-attributes><latitude>39.97552642070896</latitude><longitude>116.4892884630983</longitude><altitude>39.0226936340332</altitude><author>344963245@qq.com</author><source>desktop.mac</source><reminder-order>0</reminder-order></note-attributes></note>
</en-export>
